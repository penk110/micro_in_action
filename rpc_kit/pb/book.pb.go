// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddBookReq struct {
	BookName             string   `protobuf:"bytes,1,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Press                string   `protobuf:"bytes,3,opt,name=press,proto3" json:"press,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBookReq) Reset()         { *m = AddBookReq{} }
func (m *AddBookReq) String() string { return proto.CompactTextString(m) }
func (*AddBookReq) ProtoMessage()    {}
func (*AddBookReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *AddBookReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBookReq.Unmarshal(m, b)
}
func (m *AddBookReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBookReq.Marshal(b, m, deterministic)
}
func (m *AddBookReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBookReq.Merge(m, src)
}
func (m *AddBookReq) XXX_Size() int {
	return xxx_messageInfo_AddBookReq.Size(m)
}
func (m *AddBookReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBookReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBookReq proto.InternalMessageInfo

func (m *AddBookReq) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func (m *AddBookReq) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *AddBookReq) GetPress() string {
	if m != nil {
		return m.Press
	}
	return ""
}

func (m *AddBookReq) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *AddBookReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddBookResp struct {
	BookId               string   `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBookResp) Reset()         { *m = AddBookResp{} }
func (m *AddBookResp) String() string { return proto.CompactTextString(m) }
func (*AddBookResp) ProtoMessage()    {}
func (*AddBookResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *AddBookResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBookResp.Unmarshal(m, b)
}
func (m *AddBookResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBookResp.Marshal(b, m, deterministic)
}
func (m *AddBookResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBookResp.Merge(m, src)
}
func (m *AddBookResp) XXX_Size() int {
	return xxx_messageInfo_AddBookResp.Size(m)
}
func (m *AddBookResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBookResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddBookResp proto.InternalMessageInfo

func (m *AddBookResp) GetBookId() string {
	if m != nil {
		return m.BookId
	}
	return ""
}

type GetBookReq struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Press                string   `protobuf:"bytes,2,opt,name=press,proto3" json:"press,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBookReq) Reset()         { *m = GetBookReq{} }
func (m *GetBookReq) String() string { return proto.CompactTextString(m) }
func (*GetBookReq) ProtoMessage()    {}
func (*GetBookReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *GetBookReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBookReq.Unmarshal(m, b)
}
func (m *GetBookReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBookReq.Marshal(b, m, deterministic)
}
func (m *GetBookReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBookReq.Merge(m, src)
}
func (m *GetBookReq) XXX_Size() int {
	return xxx_messageInfo_GetBookReq.Size(m)
}
func (m *GetBookReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBookReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBookReq proto.InternalMessageInfo

func (m *GetBookReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *GetBookReq) GetPress() string {
	if m != nil {
		return m.Press
	}
	return ""
}

type GetBookResp struct {
	BookId               string   `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	BookName             string   `protobuf:"bytes,2,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBookResp) Reset()         { *m = GetBookResp{} }
func (m *GetBookResp) String() string { return proto.CompactTextString(m) }
func (*GetBookResp) ProtoMessage()    {}
func (*GetBookResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *GetBookResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBookResp.Unmarshal(m, b)
}
func (m *GetBookResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBookResp.Marshal(b, m, deterministic)
}
func (m *GetBookResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBookResp.Merge(m, src)
}
func (m *GetBookResp) XXX_Size() int {
	return xxx_messageInfo_GetBookResp.Size(m)
}
func (m *GetBookResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBookResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBookResp proto.InternalMessageInfo

func (m *GetBookResp) GetBookId() string {
	if m != nil {
		return m.BookId
	}
	return ""
}

func (m *GetBookResp) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func (m *GetBookResp) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *GetBookResp) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*AddBookReq)(nil), "pb.AddBookReq")
	proto.RegisterType((*AddBookResp)(nil), "pb.AddBookResp")
	proto.RegisterType((*GetBookReq)(nil), "pb.GetBookReq")
	proto.RegisterType((*GetBookResp)(nil), "pb.GetBookResp")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xbd, 0x4e, 0xc3, 0x30,
	0x18, 0xc4, 0x29, 0x4d, 0xc9, 0x17, 0x09, 0x24, 0x0b, 0x81, 0x05, 0x4b, 0x94, 0x01, 0x65, 0x8a,
	0xaa, 0xb2, 0xb2, 0x84, 0x25, 0x62, 0x61, 0x48, 0x1f, 0x00, 0x25, 0xf5, 0x27, 0x11, 0x45, 0xa9,
	0x5d, 0xdb, 0x80, 0x78, 0x0a, 0x1e, 0x8b, 0xd7, 0x42, 0x76, 0x9a, 0x26, 0x2d, 0x3f, 0x62, 0xbc,
	0xf3, 0x9d, 0xbf, 0xfb, 0xce, 0x06, 0xa8, 0x84, 0x68, 0x52, 0xa9, 0x84, 0x11, 0xd4, 0x93, 0x55,
	0xfc, 0x41, 0x00, 0x32, 0xce, 0xef, 0x85, 0x68, 0x0a, 0xdc, 0xd0, 0x6b, 0x08, 0xac, 0xe0, 0x69,
	0x5d, 0xb6, 0xc8, 0x48, 0x44, 0x92, 0xa0, 0x38, 0xb1, 0xc4, 0x63, 0xd9, 0x22, 0xbd, 0x00, 0xbf,
	0x7c, 0x31, 0xcf, 0x42, 0x31, 0xcf, 0x9d, 0x6c, 0x11, 0x3d, 0x87, 0xa9, 0x54, 0xa8, 0x35, 0x9b,
	0x38, 0xba, 0x03, 0x1d, 0x5b, 0xaf, 0x90, 0x1d, 0x47, 0x24, 0xf1, 0x8a, 0x0e, 0xd0, 0x08, 0x42,
	0x8e, 0x7a, 0xa5, 0x6a, 0x69, 0x6a, 0xb1, 0x66, 0x53, 0xe7, 0x18, 0x53, 0xf1, 0x0d, 0x84, 0xbb,
	0x40, 0x5a, 0xd2, 0x4b, 0x98, 0xb9, 0x44, 0x35, 0xdf, 0xe6, 0xf1, 0x2d, 0x7c, 0xe0, 0xf1, 0x1d,
	0x40, 0x8e, 0xa6, 0x0f, 0xce, 0x60, 0xd6, 0xe0, 0xfb, 0x9b, 0x50, 0xbd, 0xac, 0x87, 0x43, 0x3a,
	0x6f, 0x94, 0x2e, 0xde, 0x40, 0xb8, 0x73, 0xff, 0x31, 0x65, 0xbf, 0x10, 0xef, 0xd7, 0x42, 0x26,
	0xdf, 0x0b, 0x39, 0x5c, 0x7d, 0xf1, 0x49, 0x20, 0xb4, 0x03, 0x97, 0xa8, 0x5e, 0x6d, 0x15, 0x09,
	0x4c, 0x32, 0xce, 0xe9, 0x69, 0x2a, 0xab, 0x74, 0x78, 0x82, 0xab, 0xb3, 0x3d, 0xac, 0x65, 0x7c,
	0x64, 0x95, 0x39, 0x9a, 0x4e, 0x39, 0xec, 0xfc, 0x93, 0x72, 0x0e, 0x41, 0xc6, 0xf9, 0xd2, 0x28,
	0x2c, 0xdb, 0x7f, 0xdc, 0x9c, 0x10, 0xba, 0x80, 0x20, 0x47, 0x33, 0x76, 0x1c, 0x4e, 0x18, 0xf5,
	0x64, 0x1d, 0x73, 0x52, 0xf9, 0xee, 0xff, 0xdc, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xca, 0xc2,
	0x42, 0x59, 0x4d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookServiceClient is the client API for BookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookServiceClient interface {
	Add(ctx context.Context, in *AddBookReq, opts ...grpc.CallOption) (*AddBookResp, error)
	Get(ctx context.Context, in *GetBookReq, opts ...grpc.CallOption) (*AddBookResp, error)
	AddStream(ctx context.Context, opts ...grpc.CallOption) (BookService_AddStreamClient, error)
	GetStream(ctx context.Context, opts ...grpc.CallOption) (BookService_GetStreamClient, error)
}

type bookServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookServiceClient(cc *grpc.ClientConn) BookServiceClient {
	return &bookServiceClient{cc}
}

func (c *bookServiceClient) Add(ctx context.Context, in *AddBookReq, opts ...grpc.CallOption) (*AddBookResp, error) {
	out := new(AddBookResp)
	err := c.cc.Invoke(ctx, "/pb.BookService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) Get(ctx context.Context, in *GetBookReq, opts ...grpc.CallOption) (*AddBookResp, error) {
	out := new(AddBookResp)
	err := c.cc.Invoke(ctx, "/pb.BookService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) AddStream(ctx context.Context, opts ...grpc.CallOption) (BookService_AddStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[0], "/pb.BookService/AddStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceAddStreamClient{stream}
	return x, nil
}

type BookService_AddStreamClient interface {
	Send(*AddBookReq) error
	CloseAndRecv() (*AddBookResp, error)
	grpc.ClientStream
}

type bookServiceAddStreamClient struct {
	grpc.ClientStream
}

func (x *bookServiceAddStreamClient) Send(m *AddBookReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookServiceAddStreamClient) CloseAndRecv() (*AddBookResp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddBookResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookServiceClient) GetStream(ctx context.Context, opts ...grpc.CallOption) (BookService_GetStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[1], "/pb.BookService/GetStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceGetStreamClient{stream}
	return x, nil
}

type BookService_GetStreamClient interface {
	Send(*GetBookReq) error
	Recv() (*GetBookResp, error)
	grpc.ClientStream
}

type bookServiceGetStreamClient struct {
	grpc.ClientStream
}

func (x *bookServiceGetStreamClient) Send(m *GetBookReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookServiceGetStreamClient) Recv() (*GetBookResp, error) {
	m := new(GetBookResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BookServiceServer is the server API for BookService service.
type BookServiceServer interface {
	Add(context.Context, *AddBookReq) (*AddBookResp, error)
	Get(context.Context, *GetBookReq) (*AddBookResp, error)
	AddStream(BookService_AddStreamServer) error
	GetStream(BookService_GetStreamServer) error
}

// UnimplementedBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookServiceServer struct {
}

func (*UnimplementedBookServiceServer) Add(ctx context.Context, req *AddBookReq) (*AddBookResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedBookServiceServer) Get(ctx context.Context, req *GetBookReq) (*AddBookResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBookServiceServer) AddStream(srv BookService_AddStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method AddStream not implemented")
}
func (*UnimplementedBookServiceServer) GetStream(srv BookService_GetStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStream not implemented")
}

func RegisterBookServiceServer(s *grpc.Server, srv BookServiceServer) {
	s.RegisterService(&_BookService_serviceDesc, srv)
}

func _BookService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBookReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BookService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).Add(ctx, req.(*AddBookReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BookService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).Get(ctx, req.(*GetBookReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_AddStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookServiceServer).AddStream(&bookServiceAddStreamServer{stream})
}

type BookService_AddStreamServer interface {
	SendAndClose(*AddBookResp) error
	Recv() (*AddBookReq, error)
	grpc.ServerStream
}

type bookServiceAddStreamServer struct {
	grpc.ServerStream
}

func (x *bookServiceAddStreamServer) SendAndClose(m *AddBookResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookServiceAddStreamServer) Recv() (*AddBookReq, error) {
	m := new(AddBookReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BookService_GetStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookServiceServer).GetStream(&bookServiceGetStreamServer{stream})
}

type BookService_GetStreamServer interface {
	Send(*GetBookResp) error
	Recv() (*GetBookReq, error)
	grpc.ServerStream
}

type bookServiceGetStreamServer struct {
	grpc.ServerStream
}

func (x *bookServiceGetStreamServer) Send(m *GetBookResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookServiceGetStreamServer) Recv() (*GetBookReq, error) {
	m := new(GetBookReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BookService",
	HandlerType: (*BookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _BookService_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _BookService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddStream",
			Handler:       _BookService_AddStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetStream",
			Handler:       _BookService_GetStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "book.proto",
}
